name: Publish

on:
  workflow_dispatch:
  push:
    branches:
    - master
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '3.1.x'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
         mongodb-version: '6.0'
         mongodb-replica-set: test-rs
         mongodb-port: 27017

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install project dependencies
        run: dotnet restore
      
      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage

      - name: Test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"paulosergiosj_salonBackend" /o:"sonarcloud-paulosergiosj" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"


  publish:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '3.1.x'
          
          
      - name: Restore
        run: dotnet restore ./SalonApi.sln
        
      - name: Build
        run: dotnet build ./SalonApi.sln --configuration Release --no-restore
        
      - name: Publish
        run: dotnet publish ./SalonApi.sln --configuration Release --no-build
